subset.mean.std <- allData[,1:2]
for (i in 3:563) { ## revert to 3:563 later
stringCheck <- colnames(allData)[i]
if(grepl("mean", stringCheck) | grepl("std", stringCheck)) {
subset.mean.std <- cbind(subset.mean.std, allData[,i])
colnames(subset.mean.std)[ncol(subset.mean.std)] <-stringCheck
}
}
## 3. Label activities
subset.mean.std$label <- factor(mapvalues(subset.mean.std$label, from = 1:6,
subset.mean.std$label <- factor(mapvalues(subset.mean.std$label, from = 1:6,
to = as.character(labels[,2])))
## 4. Renames the columns
colnames(allData) <- c("subject", "label", as.vector(features[,2]))
allData$label <- factor(allData$label)
## 2. subsets only the mean/std measurements
subset.mean.std <- allData[,1:2]
for (i in 3:563) {
stringCheck <- colnames(allData)[i]
if(grepl("mean", stringCheck) | grepl("std", stringCheck)) {
subset.mean.std <- cbind(subset.mean.std, allData[,i])
colnames(subset.mean.std)[ncol(subset.mean.std)] <-stringCheck
}
}
## 3. Label activities
subset.mean.std$label <- factor(mapvalues(subset.mean.std$label, from = 1:6,
to = as.character(labels[,2])))
subset.mean.std[1:5,1:5]
debugSource('~/Google Drive/Coursera/Data Science specialization/03 Getting and Cleaning Data/Course project/run_analysis.R')
colnames(allData) <- c("subject", "label", as.vector(features[,2]))
allData$label <- factor(allData$label)
## 2. subsets only the mean/std measurements
subset.mean.std <- allData[,1:2]
for (i in 3:563) {
stringCheck <- colnames(allData)[i]
if(grepl("mean", stringCheck) | grepl("std", stringCheck)) {
subset.mean.std <- cbind(subset.mean.std, allData[,i])
colnames(subset.mean.std)[ncol(subset.mean.std)] <-stringCheck
}
}
subset.mean.std[1:5,1:5]
subset.mean.std$label <- factor(mapvalues(subset.mean.std$label, from = 1:6,
to = as.character(labels[,2])))
subset.mean.std[1:5,1:5]
avg.subj <- data.frame()
for(i in 1:30) {
a <- subset(subset.mean.std, subject==i)
b <- i
for(j in 3:81) {b <- c(b, mean(a[,j]))}
avg.subj <- rbind(avg.subj, b)
}
B
b
colnames(avg.subj) <- c("subject", colnames(subset.mean.std)[3:81])
avg.actv <- data.frame()
for(i in 1:6) {
a <- subset(subset.mean.std, label==i)
b <- i
for(j in 3:81) {b <- c(b, mean(a[,j]))}
avg.actv <- rbind(avg.actv, b)
}
colnames(avg.actv) <- colnames(subset.mean.std)[2:81]
avg.actv
avg.actv <- data.frame()
for(i in 1:6) {
a <- subset(subset.mean.std, label==i)
b <- j
for(j in 3:81) {b <- c(b, mean(a[,j]))}
avg.actv <- rbind(avg.actv, b)
}
colnames(avg.actv) <- colnames(subset.mean.std)[2:81]
require(plyr)
labels <- read.table("sourceData/activity_labels.txt")
features <- read.table("sourceData/features.txt")
## 1. Data are combined columnwise then rowwise
allData <- rbind(cbind(read.table("sourceData/test/subject_test.txt"),
read.table("sourceData/test/y_test.txt"),
read.table("sourceData/test/X_test.txt")),
cbind(read.table("sourceData/train/subject_train.txt"),
read.table("sourceData/train/y_train.txt"),
read.table("sourceData/train/X_train.txt")))
## 4. Renames the columns
colnames(allData) <- c("subject", "label", as.vector(features[,2]))
allData$label <- factor(allData$label)
## 2. subsets only the mean/std measurements
subset.mean.std <- allData[,1:2]
for (i in 3:563) {
stringCheck <- colnames(allData)[i]
if(grepl("mean", stringCheck) | grepl("std", stringCheck)) {
subset.mean.std <- cbind(subset.mean.std, allData[,i])
colnames(subset.mean.std)[ncol(subset.mean.std)] <-stringCheck
}
}
subset.mean.std$label <- factor(mapvalues(subset.mean.std$label, from = 1:6,
to = as.character(labels[,2])))
avg.subj <- data.frame()
for(i in 1:30) {
a <- subset(subset.mean.std, subject==i)
b <- i
for(j in 3:81) {b <- c(b, mean(a[,j]))}
avg.subj <- rbind(avg.subj, b)
}
colnames(avg.subj) <- c("subject", colnames(subset.mean.std)[3:81])
avg.actv <- data.frame()
subset.mean.std[1:6,1:6]
colnames(avg.subj) <- c("subject", colnames(subset.mean.std)[3:81])
avg.actv <- data.frame()
for(i in labels[,2]) {
a <- subset(subset.mean.std, label==i)
b <- i
for(j in 3:81) {b <- c(b, mean(a[,j]))}
avg.actv <- rbind(avg.actv, b)
}
colnames(avg.actv) <- colnames(subset.mean.std)[2:81]
avg.actv <- data.frame()
for(i in as.character(labels[,2]) {
a <- subset(subset.mean.std, label==i)
b <- i
for(j in 3:81) {b <- c(b, mean(a[,j]))}
avg.actv <- rbind(avg.actv, b)
}
colnames(avg.actv) <- colnames(subset.mean.std)[2:81]
avg.actv <- data.frame()
for(i in as.character(labels[,2])) {
a <- subset(subset.mean.std, label==i)
b <- i
for(j in 3:81) {b <- c(b, mean(a[,j]))}
avg.actv <- rbind(avg.actv, b)
}
colnames(avg.actv) <- colnames(subset.mean.std)[2:81]
labels
avg.actv <- data.frame()
for(i in c("WALKING", "WALKING_UPSTAIRS", "WALKING_DOWNSTAIRS", "SITTING", "STANDING", "LAYING")) {
a <- subset(subset.mean.std, label==i)
b <- i
for(j in 3:81) {b <- c(b, mean(a[,j]))}
avg.actv <- rbind(avg.actv, b)
}
colnames(avg.actv) <- colnames(subset.mean.std)[2:81]
head(avg.actv)
## 4. Renames the columns
colnames(allData) <- c("subject", "label", as.vector(features[,2]))
allData$label <- factor(allData$label)
## 2. subsets only the mean/std measurements
subset.mean.std <- allData[,1:2]
for (i in 3:563) {
stringCheck <- colnames(allData)[i]
if(grepl("mean", stringCheck) | grepl("std", stringCheck)) {
subset.mean.std <- cbind(subset.mean.std, allData[,i])
colnames(subset.mean.std)[ncol(subset.mean.std)] <-stringCheck
}
}
## 3. Label activities
subset.mean.std$label <- factor(mapvalues(subset.mean.std$label, from = 1:6,
to = as.character(labels[,2])))
avg.actv <- data.frame()
for(i in c("WALKING", "WALKING_UPSTAIRS", "WALKING_DOWNSTAIRS", "SITTING", "STANDING", "LAYING")) {
a <- subset(subset.mean.std, label==i)
b <- i
for(j in 3:81) {b <- c(b, mean(a[,j]))}
avg.actv <- rbind(avg.actv, b)
}
colnames(avg.actv) <- colnames(subset.mean.std)[2:81]
a <- subset(subset.mean.std, label=="WALKING_UPSTAIRS")
b<-"WALKING_UPSTAIRS"
for(j in 3:81) {b <- c(b, mean(a[,j]))}
B
b
require(plyr)
labels <- read.table("sourceData/activity_labels.txt")
features <- read.table("sourceData/features.txt")
## 1. Data are combined columnwise then rowwise
allData <- rbind(cbind(read.table("sourceData/test/subject_test.txt"),
read.table("sourceData/test/y_test.txt"),
read.table("sourceData/test/X_test.txt")),
cbind(read.table("sourceData/train/subject_train.txt"),
read.table("sourceData/train/y_train.txt"),
read.table("sourceData/train/X_train.txt")))
## 4. Renames the columns
colnames(allData) <- c("subject", "label", as.vector(features[,2]))
allData$label <- factor(allData$label)
## 2. subsets only the mean/std measurements
subset.mean.std <- allData[,1:2]
for (i in 3:563) {
stringCheck <- colnames(allData)[i]
if(grepl("mean", stringCheck) | grepl("std", stringCheck)) {
subset.mean.std <- cbind(subset.mean.std, allData[,i])
colnames(subset.mean.std)[ncol(subset.mean.std)] <-stringCheck
}
}
## 3. Label activities
subset.mean.std$label <- factor(mapvalues(subset.mean.std$label, from = 1:6,
to = as.character(labels[,2])))
avg.subj <- data.frame()
for(i in 1:30) {
a <- subset(subset.mean.std, subject==i)
b <- i
for(j in 3:81) {b <- c(b, mean(a[,j]))}
avg.subj <- rbind(avg.subj, b)
}
colnames(avg.subj) <- c("subject", colnames(subset.mean.std)[3:81])
?exists
?write.csv
write.csv(allData, "allData.csv")
if(exists("allData.csv")) {
allData <- read.csv("allData.csv")
print("allData.csv already exists. Reading dataframe")
}
setwd("~/Google Drive/Coursera/Data Science specialization/03 Getting and Cleaning Data/Course project")
if(exists("allData.csv")) {
#allData <- read.csv("allData.csv")
print("allData.csv already exists. Reading dataframe")
}
require(plyr)
labels <- read.table("sourceData/activity_labels.txt")
features <- read.table("sourceData/features.txt")
if(exists("allData.csv")) {
print("allData.csv already exists. Reading dataframe")
allData <- read.csv("allData.csv")
} else { ## 1. Data are combined columnwise then rowwise
allData <- rbind(cbind(read.table("sourceData/test/subject_test.txt"),
read.table("sourceData/test/y_test.txt"),
read.table("sourceData/test/X_test.txt")),
cbind(read.table("sourceData/train/subject_train.txt"),
read.table("sourceData/train/y_train.txt"),
read.table("sourceData/train/X_train.txt")))
## 4. Renames the columns
colnames(allData) <- c("subject", "label", as.vector(features[,2]))
allData$label <- factor(allData$label)
write.csv(allData, "allData.csv")
}
if(exists("allData.csv")) {
print("allData.csv already exists. Reading dataframe")
allData <- read.csv("allData.csv")
}
exists("allData.csv")
?exists
if(file.exists("allData.csv")) {
print("allData.csv already exists. Reading dataframe")
#allData <- read.csv("allData.csv")
}
require(plyr)
labels <- read.table("sourceData/activity_labels.txt")
features <- read.table("sourceData/features.txt")
if(file.exists("allData.csv")) {
print("allData.csv already exists. Reading dataframe")
allData <- read.csv("allData.csv")
} else { ## 1. Data are combined columnwise then rowwise
allData <- rbind(cbind(read.table("sourceData/test/subject_test.txt"),
read.table("sourceData/test/y_test.txt"),
read.table("sourceData/test/X_test.txt")),
cbind(read.table("sourceData/train/subject_train.txt"),
read.table("sourceData/train/y_train.txt"),
read.table("sourceData/train/X_train.txt")))
## 4. Renames the columns
colnames(allData) <- c("subject", "label", as.vector(features[,2]))
allData$label <- factor(allData$label)
write.csv(allData, "allData.csv")
}
allData[1:5,1:5]
allData[1:7,1:6]
## 2. subsets only the mean/std measurements
subset.mean.std <- allData[,1:2]
for (i in 3:563) {
stringCheck <- colnames(allData)[i]
if(grepl("mean", stringCheck) | grepl("std", stringCheck)) {
subset.mean.std <- cbind(subset.mean.std, allData[,i])
colnames(subset.mean.std)[ncol(subset.mean.std)] <-stringCheck
}
}
subset.mean.std$label <- factor(mapvalues(subset.mean.std$label, from = 1:6,
to = as.character(labels[,2])))
subset.mean.std$label <- factor(mapvalues(subset.mean.std$label, from = 1:6,
to = as.character(labels[,2])))
subset.mean.std$label <- factor(mapvalues(subset.mean.std$label, from = 1:6, to = as.character(labels[,2])))
as.character(labels[,2])
subset.mean.std$label
allData[1:5,1;5]
allData[1:5,1:5]
subset.mean.std[1:5,1:5]
subset.mean.std$label[1:5]
subset.mean.std <- allData[1:10,1:2]
subset.mean.std <- allData[,1:2]
subset.mean.std[1:5,1:2]
?write.csv
allData <- rbind(cbind(read.table("sourceData/test/subject_test.txt"),
read.table("sourceData/test/y_test.txt"),
read.table("sourceData/test/X_test.txt")),
cbind(read.table("sourceData/train/subject_train.txt"),
read.table("sourceData/train/y_train.txt"),
read.table("sourceData/train/X_train.txt")))
colnames(allData) <- c("subject", "label", as.vector(features[,2]))
allData$label <- factor(allData$label)
write.csv(allData, "allData.csv", row.names==FALSE)
write.csv(allData, "allData.csv", row.names=FALSE)
testCase <- read.csv("allData.csv")[1:5, 1:5]
testCase
View(testCase)
require(plyr)
labels <- read.table("sourceData/activity_labels.txt")
features <- read.table("sourceData/features.txt")
if(file.exists("allData.csv")) {
print("allData.csv already exists. Reading dataframe")
allData <- read.csv("allData.csv")
} else { ## 1. Data are combined columnwise then rowwise
print("allData.csv not found. Combining source data.")
allData <- rbind(cbind(read.table("sourceData/test/subject_test.txt"),
read.table("sourceData/test/y_test.txt"),
read.table("sourceData/test/X_test.txt")),
cbind(read.table("sourceData/train/subject_train.txt"),
read.table("sourceData/train/y_train.txt"),
read.table("sourceData/train/X_train.txt")))
## 4. Renames the columns
colnames(allData) <- c("subject", "label", as.vector(features[,2]))
allData$label <- factor(allData$label)
write.csv(allData, "allData.csv", row.names = FALSE)
}
subset.mean.std <- allData[,1:2]
for (i in 3:563) {
stringCheck <- colnames(allData)[i]
if(grepl("mean", stringCheck) | grepl("std", stringCheck)) {
subset.mean.std <- cbind(subset.mean.std, allData[,i])
colnames(subset.mean.std)[ncol(subset.mean.std)] <-stringCheck
}
}
## 3. Label activities
subset.mean.std$label <- factor(mapvalues(subset.mean.std$label,
from = 1:6, to = as.character(labels[,2])))
avg.subj <- data.frame()
for(i in 1:30) {
a <- subset(subset.mean.std, subject==i)
b <- i
for(j in 3:81) {b <- c(b, mean(a[,j]))}
avg.subj <- rbind(avg.subj, b)
}
colnames(avg.subj) <- c("subject", colnames(subset.mean.std)[3:81])
head(avg.subj)
avg.subj[1:10,1:6]
dim(avg.subj)
labels <- read.table("sourceData/activity_labels.txt")
features <- read.table("sourceData/features.txt")
if(file.exists("allData.csv")) {
print("allData.csv already exists. Reading dataframe")
allData <- read.csv("allData.csv")
} else { ## 1. Data are combined columnwise then rowwise
print("allData.csv not found. Combining source data.")
allData <- rbind(cbind(read.table("sourceData/test/subject_test.txt"),
read.table("sourceData/test/y_test.txt"),
read.table("sourceData/test/X_test.txt")),
cbind(read.table("sourceData/train/subject_train.txt"),
read.table("sourceData/train/y_train.txt"),
read.table("sourceData/train/X_train.txt")))
## 4. Renames the columns
colnames(allData) <- c("subject", "label", as.vector(features[,2]))
allData$label <- factor(allData$label)
write.csv(allData, "allData.csv", row.names = FALSE)
}
for (i in 3:563) {
stringCheck <- colnames(allData)[i]
if(grepl("mean", stringCheck) | grepl("std", stringCheck)) {
subset.mean.std <- cbind(subset.mean.std, allData[,i])
colnames(subset.mean.std)[ncol(subset.mean.std)] <-stringCheck
}
}
subset.mean.std <- allData[,1:2]
for (i in 3:563) {
stringCheck <- colnames(allData)[i]
if(grepl("mean", stringCheck) | grepl("std", stringCheck)) {
subset.mean.std <- cbind(subset.mean.std, allData[,i])
colnames(subset.mean.std)[ncol(subset.mean.std)] <-stringCheck
}
}
subset.mean.std$label <- factor(mapvalues(subset.mean.std$label,
from = 1:6, to = as.character(labels[,2])))
avg.actv <- data.frame()
for(i in c("WALKING", "WALKING_UPSTAIRS", "WALKING_DOWNSTAIRS",
"SITTING", "STANDING", "LAYING")) {
a <- subset(subset.mean.std, label==i)
b <- i
for(j in 3:81) {b <- c(b, mean(a[,j]))}
avg.actv <- rbind(avg.actv, b)
}
warnings()
avg.actv <- data.frame()
for(i in factor(c("WALKING", "WALKING_UPSTAIRS", "WALKING_DOWNSTAIRS",
"SITTING", "STANDING", "LAYING"))) {
a <- subset(subset.mean.std, label==i)
b <- i
for(j in 3:81) {b <- c(b, mean(a[,j]))}
avg.actv <- rbind(avg.actv, b)
}
myFactors <- c("WALKING", "WALKING_UPSTAIRS", "WALKING_DOWNSTAIRS",
"SITTING", "STANDING", "LAYING")
myFactors
factor(myFactors)
label
labels
as.character(labels[,2])
for(i in as.character(labels[,2])) {
a <- subset(subset.mean.std, label==i)
b <- i
for(j in 3:81) {b <- c(b, mean(a[,j]))}
avg.actv <- rbind(avg.actv, b)
}
avg.actv <- data.frame()
for(i in as.character(labels[,2])) {
a <- subset(subset.mean.std, label==i)
b <- i
for(j in 3:81) {b <- c(b, mean(a[,j]))}
avg.actv <- rbind(avg.actv, b)
}
avg.actv <- data.frame()
warnings()
avg.actv <- data.frame()
for(i in labels[,2]) {
a <- subset(subset.mean.std, label==i)
b <- i
for(j in 3:81) {b <- c(b, mean(a[,j]))}
avg.actv <- rbind(avg.actv, b)
}
avg.actv <- data.frame()
a <- subset(subset.mean.std, label=="WALKING")
head(a)
dim(a)
b <- "WALKING"
for(j in 3:81) {b <- c(b, mean(a[,j]))}
dim(b)
b
b <- as.factor(i)
b <- as.factor("WALKING")
b
for(j in 3:81) {b <- c(b, mean(a[,j]))}
b
avg.actv <- data.frame()
for(i in labels[,2]) {
print(i)
}
for(i in labels[,2]) {
a <- subset(subset.mean.std, label==i)
}
a
head(a)
b<-i
b
for(j in 3:81) {b <- c(b, mean(a[,j]))}
b
len(b)
length(b)
?data.frame
avg.actv <- rbind(avg.actv, b)
avg.actv
avg.actv[1:5,1:5]
dim(avg.actv)
avg.actv[1,1:5]
colnames(avg.actv) <- colnames(subset.mean.std)[2:81]
avg.actv[1,1:5]
avg.actv <- data.frame()
for(i in labels[,2]) {
a <- subset(subset.mean.std, label==i)
}
colnames(avg.actv) <- colnames(subset.mean.std)[2:81]
dim(avg.actv)
avg.actv <- data.frame()
for(i in labels[,2]) {
a <- subset(subset.mean.std, label==i)
b <- i
for(j in 3:81) {b <- c(b, mean(a[,j]))}
avg.actv <- rbind(avg.actv, b)
}
colnames(avg.actv) <- colnames(subset.mean.std)[2:81]
b <- vector()
for(j in 3:81) {b <- c(b, mean(a[,j]))}
j
b
length(b)
avg.actv <- data.frame()
for(i in labels[,2]) {
a <- subset(subset.mean.std, label==i)
b <- vector()
for(j in 3:81) {b <- c(b, mean(a[,j]))}
avg.actv <- rbind(avg.actv, b)
cbind(labels[,2], avg.actv)
}
colnames(avg.actv) <- colnames(subset.mean.std)[2:81]
avg.actv <- data.frame()
a <- subset(subset.mean.std, label=="LAYING"
a <- subset(subset.mean.std, label=="LAYING")
a
b <- vector()
for(j in 3:81) {b <- c(b, mean(a[,j]))}
b
avg.actv <- rbind(avg.actv, b)
dim(avg.actv)
a <- subset(subset.mean.std, label=="STANDING")
b <- vector()
for(j in 3:81) {b <- c(b, mean(a[,j]))}
avg.actv <- rbind(avg.actv, b)
dim(avg.actv)
avg.actv[1:2, 1:6]
avg.actv <- data.frame()
for(i in labels[,2]) {
a <- subset(subset.mean.std, label==i)
b <- vector()
for(j in 3:81) {b <- c(b, mean(a[,j]))}
avg.actv <- rbind(avg.actv, b)
}
dim(avg.actv)
cbind(labels[,2], avg.actv)
avg.actv <- cbind(labels[,2], avg.actv)
colnames(avg.actv) <- colnames(subset.mean.std)[2:81]
colnames(avg.actv)
source('~/Google Drive/Coursera/Data Science specialization/03 Getting and Cleaning Data/Course project/run_analysis.R')
