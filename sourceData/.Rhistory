# setwd (PROJECTFOLDER)
loansData <- read.csv ("./data/loansData.csv")
creditMin <- substr (loansData$FICO.Range, start = 1, stop = 3)
creditMax <- as.integer (substr (loansData$FICO.Range, start = 5, stop = 7))
creditAvg <- (creditMin + creditMax)/2
loansData[, 15] <- creditAvg
colnames (loansData)[15] <- "creditAvg"
qplot (loansData$creditAvg, loansData$Interest.Rate, data = loansData)
# Color by income
incFactor <- quantcut (loansData$Monthly.Income, na.rm = T)
qplot (loansData$creditAvg, loansData$Interest.Rate, data = loansData, color = incFactor)
# Color by amount funced
amntFactor <- quantcut (loansData$Amount.Funded.By.Investors, na.rm = T)
qplot (loansData$creditAvg, loansData$Interest.Rate, data = loansData, color = amntFactor)
# Color by length
# Top grouping is mostly 36mo loans, bottom group is a mix
qplot (loansData$creditAvg, loansData$Interest.Rate, data = loansData, color = Loan.Length)
#Color by Loan.Purpose
qplot (loansData$creditAvg, loansData$Interest.Rate, data = loansData, color = Loan.Purpose)
# Color by Open.CREDIT.Lines
linesFactor <- quantcut (loansData$Open.CREDIT.Lines, na.rm = T)
qplot (loansData$creditAvg, loansData$Interest.Rate, data = loansData, color = linesFactor)
# Color by Inquiries.in.the.Last.6.Months
df$crop1 <- subset (loansData, )
x<-list(foo = 1:4, bar = 0.6, baz = "hello")
x
y <- list (a = c("Al", "Bob", "Charlie"), b = c("Dan", "Ed"), c = "Fred")
y
for (i in seq_len(10)) print (i)
seq_len(10)
for (k in c (1,10)) print (k)
make.power <- function(n) {}
make.power <- function(n) {
pow <- function(x) {
}
pow}
if (x<5) {
source('~/.active-rstudio-document')
set.seed(1); normals <- rnorm(100, 1, 2)
> nLL <- make.NegLogLik(normals)
> nLL
set.seed(1); normals <- rnorm(100, 1, 2)
nLL <- make.NegLogLik (normals)
nLL
ls(environment(nLL))
?params
str(params)
?apply
str()
str(apply)
?apply
apply <- c(1-5)
apply <- c(1:5)
?apply
str(apply)
library(Rtools)
library(rtools)
search()
install.packages("swirl")
library(swirl)
swirl()
find.package("devtools")
install.packages("devtools")
library(devtools)
library(devtools)
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
cd ..
source('C:/Users/Jai/Google Drive/Coursera/Data Science specialization/02 R Programming/Week 3/ProgrammingAssignment2/ProgrammingAssignment2/cachemean.R')
makeVector(11)
source('C:/Users/Jai/Google Drive/Coursera/Data Science specialization/02 R Programming/Week 3/ProgrammingAssignment2/ProgrammingAssignment2/playground.R')
?list
source('C:/Users/Jai/Google Drive/Coursera/Data Science specialization/02 R Programming/Week 3/ProgrammingAssignment2/ProgrammingAssignment2/playground.R')
source('C:/Users/Jai/Google Drive/Coursera/Data Science specialization/02 R Programming/Week 3/ProgrammingAssignment2/ProgrammingAssignment2/playground.R')
source('C:/Users/Jai/Google Drive/Coursera/Data Science specialization/02 R Programming/Week 3/ProgrammingAssignment2/ProgrammingAssignment2/playground.R')
source('C:/Users/Jai/Google Drive/Coursera/Data Science specialization/02 R Programming/Week 3/ProgrammingAssignment2/ProgrammingAssignment2/cachemean.R')
source('C:/Users/Jai/Google Drive/Coursera/Data Science specialization/02 R Programming/Week 3/ProgrammingAssignment2/ProgrammingAssignment2/cachemean.R')
?return
source('C:/Users/Jai/Google Drive/Coursera/Data Science specialization/02 R Programming/Week 3/ProgrammingAssignment2/ProgrammingAssignment2/cachemean.R')
source('C:/Users/Jai/Google Drive/Coursera/Data Science specialization/02 R Programming/Week 3/ProgrammingAssignment2/ProgrammingAssignment2/cachemean.R')
source('C:/Users/Jai/Google Drive/Coursera/Data Science specialization/02 R Programming/Week 3/ProgrammingAssignment2/ProgrammingAssignment2/cachemean.R')
aaa <- c(1:10)
cachemean(aaa)
makeVector(aaa)
bbb<-makeVector(aaa)
cachemean(bbb)
source('C:/Users/Jai/Google Drive/Coursera/Data Science specialization/02 R Programming/Week 3/ProgrammingAssignment2/ProgrammingAssignment2/cachematrix.R')
aaa<-rbind(c(1:5, c(6:10)))
aaa
aaa<-cbind(c(1:5, c(6:10)))
aaa
cacheSolve(makeCacheMatrix(aaa))
?data.frame
?dims
?dim
aaa <- matrix
aaa <- matrix (c(1:16), 4, 4)
aaa
cacheSolve(makeCacheMatrix(aaa))
aaa <- matrix(c(1:8,10),3,3)
cacheSolve(makeCacheMatrix(aaa))
size <- 1000 # size of the matrix edge, don't make this too big
mymatrix <- matrix(rnorm(size^2), nrow=size, ncol=size)
mymatrix.inverse <- solve(mymatrix)
special.matrix   <- makeCacheMatrix(mymatrix)
special.matrix
special.solved.1 <- cacheSolve(special.matrix)
special.solved.2 <- cacheSolve(special.matrix)
identical(mymatrix.inverse, special.solved.1) & identical(mymatrix.inverse, special.solved.2)
mymatrix$get
special.solved.3 <- cacheSolve(special.matrix, rep(4,1000))
identical(special.solved.1, special.solved.3)
library(datasets)
data(iris)
head(iris)
lapply(split(iris$Sepal.Length, iris$Species), mean)
rowMeans(iris[, 1:4])
?apply
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
cylAvs <- tapply(mtcars$mpg, mtcars$cyl, mean)
cylAvs$8 - cylAvs$4
cylAvs[,1] - cylAvs[,3]
cylAvs[1,] - cylAvs[3,]
15.1-26.66364
head(cars)
head(mtcars)
tapply(mtcars$hp, mtcars$cyl, mean)
209.21429-82.63636
debug(ls)
ls
#    look it up in the GITHUB_CONSUMER_SECRET environmental variable.
source('C:/Users/Jai/Google Drive/Coursera/Data Science specialization/03 Getting and Cleaning Data/Week 2/oauth2-github.r')
install.packages("httr")
install.packages("httpuv")
install.packages("httr")
install.packages("httr")
install.packages("httr")
source('C:/Users/Jai/Google Drive/Coursera/Data Science specialization/03 Getting and Cleaning Data/Week 2/oauth2-github.r')
install.packages("httr")
install.packages("httr")
install.packages("httpuv")
library(httr)
library(httpuv)
source('C:/Users/Jai/Google Drive/Coursera/Data Science specialization/03 Getting and Cleaning Data/Week 2/oauth2-github.r')
source('C:/Users/Jai/Google Drive/Coursera/Data Science specialization/03 Getting and Cleaning Data/Week 2/oauth2-github.r')
q1 <- GET("https://api.github.com/users/jtleek/repos", myapp)
sig <- sign_oath1.0(myapp, token = "18c11510977e8fc8b5376632c0f5041a9a9084a0")
sig <- sign_oauth1.0(myapp, token = "18c11510977e8fc8b5376632c0f5041a9a9084a0")
q1 <- GET("https://api.github.com/users/jtleek/repos", sig)
head(q1)
q1
source('C:/Users/Jai/Google Drive/Coursera/Data Science specialization/03 Getting and Cleaning Data/Week 2/q2.R')
setwd("C:/Users/Jai/Google Drive/Coursera/Data Science specialization/03 Getting and Cleaning Data/Week 2")
if (!file.exists("q2data.csv") {
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", "q2data.csv")
}
if (!file.exists("q2data.csv")) {
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", "q2data.csv")
}
if (!file.exists("q2data.csv")) {
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", "q2data.csv")
}
{
else ("it's there yo")
}
if (!file.exists("q2data.csv")) {
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", "q2data.csv")
}
else ("it's there yo")
if (!file.exists("q2data.csv")) {
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", "q2data.csv")
}else ("it's there yo")
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
q2Data <- read.csv("q2data.csv")
head(q2Data)
acs <- read.csv("q2data.csv")
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select * from acs where AGEP < 50 and pwgtp1")
?unique
unique(acs$AGEP)
sqldf("select unique * from acs")
sqldf("select AGEP where unique from acs")
sqldf("select distinct AGEP from acs")
?readlines
?readLines
html <- GET("http://biostat.jhsph.edu/~jleek/contact.html ")
library(httr)
html <- GET("http://biostat.jhsph.edu/~jleek/contact.html ")
content2 = content(html,as="text")
parsedHtml = htmlParse(content2,asText=TRUE)
10th <- "<meta name="Distribution" content="Global" />"
library(XML)
html <- htmlTreeParse(url, useInternalNodes = TRUE)
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
html <- htmlTreeParse(url, useInternalNodes = TRUE)
head(html)
html2 <- GET(url)
content2 <- content(html2, as = "text")
parsedHtml <- htmlParse(content2, asText = TRUE)
parsedHtml
source('~/.active-rstudio-document', echo=TRUE)
htmlCode
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
?read.fwf
x <- read.fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
head(x)
sum(x$V4)
x <- read.fwf(
file=url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for "),
skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
x <- read.fwf(
file=url("http://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for "),
skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
sum(x$V4)
subject_test <- read.table("sourceData/test/subject_test.txt")
X_test <- read.table("sourceData/test/X_test.txt")
y_test <- read.table("sourceData/test/y_test.txt")
subject_train <- read.table("sourceData/train/subject_train.txt")
X_train <- read.table("sourceData/train/X_train.txt")
y_train <- read.table("sourceData/train/y_train.txt")
dim(subject_test)
dim(X_test)
dim(y_test)
dim(subject_train)
dim(X_train)
dim(y_train)
source('C:/Users/Jai/Google Drive/Coursera/Data Science specialization/03 Getting and Cleaning Data/Course project/tidyData.R', echo=TRUE)
setwd("C:/Users/Jai/Google Drive/Coursera/Data Science specialization/03 Getting and Cleaning Data/Course project/UCI HAR Dataset")
